# Generated by Django 5.1.10 on 2025-07-17 19:10

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Checkouts",
            fields=[
                (
                    "field_timestamp",
                    models.DateTimeField(blank=True, db_column="_timestamp", null=True),
                ),
                ("id", models.TextField(primary_key=True, serialize=False)),
                ("origin", models.TextField()),
                ("tree_name", models.TextField(blank=True, null=True)),
                ("git_repository_url", models.TextField(blank=True, null=True)),
                ("git_commit_hash", models.TextField(blank=True, null=True)),
                ("git_commit_name", models.TextField(blank=True, null=True)),
                ("git_repository_branch", models.TextField(blank=True, null=True)),
                ("patchset_files", models.JSONField(blank=True, null=True)),
                ("patchset_hash", models.TextField(blank=True, null=True)),
                ("message_id", models.TextField(blank=True, null=True)),
                ("comment", models.TextField(blank=True, null=True)),
                ("start_time", models.DateTimeField(blank=True, null=True)),
                ("log_url", models.TextField(blank=True, null=True)),
                (
                    "log_excerpt",
                    models.CharField(blank=True, max_length=16384, null=True),
                ),
                ("valid", models.BooleanField(blank=True, null=True)),
                ("misc", models.JSONField(blank=True, null=True)),
                ("git_commit_message", models.TextField(blank=True, null=True)),
                (
                    "git_repository_branch_tip",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "git_commit_tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(), blank=True, null=True, size=None
                    ),
                ),
                (
                    "origin_builds_finish_time",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "origin_tests_finish_time",
                    models.DateTimeField(blank=True, null=True),
                ),
            ],
            options={
                "db_table": "checkouts",
            },
        ),
        migrations.CreateModel(
            name="Builds",
            fields=[
                (
                    "field_timestamp",
                    models.DateTimeField(blank=True, db_column="_timestamp", null=True),
                ),
                ("id", models.TextField(primary_key=True, serialize=False)),
                ("origin", models.TextField()),
                ("comment", models.TextField(blank=True, null=True)),
                ("start_time", models.DateTimeField(blank=True, null=True)),
                ("duration", models.FloatField(blank=True, null=True)),
                ("architecture", models.TextField(blank=True, null=True)),
                ("command", models.TextField(blank=True, null=True)),
                ("compiler", models.TextField(blank=True, null=True)),
                ("input_files", models.JSONField(blank=True, null=True)),
                ("output_files", models.JSONField(blank=True, null=True)),
                ("config_name", models.TextField(blank=True, null=True)),
                ("config_url", models.TextField(blank=True, null=True)),
                ("log_url", models.TextField(blank=True, null=True)),
                (
                    "log_excerpt",
                    models.CharField(blank=True, max_length=16384, null=True),
                ),
                ("misc", models.JSONField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("PASS", "Pass"),
                            ("FAIL", "Fail"),
                            ("SKIP", "Skip"),
                            ("ERROR", "Error"),
                            ("MISS", "Miss"),
                            ("DONE", "Done"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "checkout",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="kernelCI_app.checkouts",
                    ),
                ),
            ],
            options={
                "db_table": "builds",
            },
        ),
        migrations.CreateModel(
            name="Issues",
            fields=[
                (
                    "field_timestamp",
                    models.DateTimeField(blank=True, db_column="_timestamp", null=True),
                ),
                ("id", models.TextField(primary_key=True, serialize=False)),
                ("version", models.IntegerField()),
                ("origin", models.TextField()),
                ("report_url", models.TextField(blank=True, null=True)),
                ("report_subject", models.TextField(blank=True, null=True)),
                ("culprit_code", models.BooleanField(blank=True, null=True)),
                ("culprit_tool", models.BooleanField(blank=True, null=True)),
                ("culprit_harness", models.BooleanField(blank=True, null=True)),
                ("comment", models.TextField(blank=True, null=True)),
                ("misc", models.JSONField(blank=True, null=True)),
                (
                    "categories",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(), blank=True, null=True, size=None
                    ),
                ),
            ],
            options={
                "db_table": "issues",
                "unique_together": {("id", "version")},
            },
        ),
        migrations.CreateModel(
            name="Tests",
            fields=[
                (
                    "field_timestamp",
                    models.DateTimeField(blank=True, db_column="_timestamp", null=True),
                ),
                ("id", models.TextField(primary_key=True, serialize=False)),
                ("origin", models.TextField()),
                ("environment_comment", models.TextField(blank=True, null=True)),
                ("environment_misc", models.JSONField(blank=True, null=True)),
                ("path", models.TextField(blank=True, null=True)),
                ("comment", models.TextField(blank=True, null=True)),
                ("log_url", models.TextField(blank=True, null=True)),
                (
                    "log_excerpt",
                    models.CharField(blank=True, max_length=16384, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("PASS", "Pass"),
                            ("FAIL", "Fail"),
                            ("SKIP", "Skip"),
                            ("ERROR", "Error"),
                            ("MISS", "Miss"),
                            ("DONE", "Done"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("start_time", models.DateTimeField(blank=True, null=True)),
                ("duration", models.FloatField(blank=True, null=True)),
                ("output_files", models.JSONField(blank=True, null=True)),
                ("misc", models.JSONField(blank=True, null=True)),
                ("number_value", models.FloatField(blank=True, null=True)),
                (
                    "environment_compatible",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(), blank=True, null=True, size=None
                    ),
                ),
                (
                    "number_prefix",
                    models.CharField(
                        blank=True,
                        choices=[("metric", "Metric"), ("binary", "Binary")],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("number_unit", models.TextField(blank=True, null=True)),
                ("input_files", models.JSONField(blank=True, null=True)),
                (
                    "build",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="kernelCI_app.builds",
                    ),
                ),
            ],
            options={
                "db_table": "tests",
            },
        ),
        migrations.CreateModel(
            name="Incidents",
            fields=[
                (
                    "field_timestamp",
                    models.DateTimeField(blank=True, db_column="_timestamp", null=True),
                ),
                ("id", models.TextField(primary_key=True, serialize=False)),
                ("origin", models.TextField()),
                ("issue_version", models.IntegerField()),
                ("present", models.BooleanField(blank=True, null=True)),
                ("comment", models.TextField(blank=True, null=True)),
                ("misc", models.JSONField(blank=True, null=True)),
                (
                    "build",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="kernelCI_app.builds",
                    ),
                ),
                (
                    "issue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="kernelCI_app.issues",
                    ),
                ),
                (
                    "test",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="kernelCI_app.tests",
                    ),
                ),
            ],
            options={
                "db_table": "incidents",
            },
        ),
    ]
